services:
  kafka-controller:
    image: confluentinc/cp-kafka:${CP_KAFKA_TAG}
    restart: on-failure
    ports:
      - target: 9093
        published: 9093
        host_ip: 127.0.0.1
    networks:
      - kafka
    volumes:
      - type: volume
        source: kafka-controller-data
        target: /var/lib/kafka/data
      - type: volume
        source: kafka-controller-secrets
        target: /etc/kafka/secrets
    environment:
      CLUSTER_ID: "qRxWd8yJTnmdg60vfPfeIQ"
      KAFKA_ADVERTISED_LISTENERS: ""
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-controller:9093"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENERS: "CONTROLLER://kafka-controller:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL"
      KAFKA_NODE_ID: 1
      KAFKA_NUM_PARTITIONS: 16
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: controller
  kafka-broker:
    image: confluentinc/cp-kafka:${CP_KAFKA_TAG}
    restart: on-failure
    ports:
      - target: 9092
        published: 9092
        host_ip: 127.0.0.1
    networks:
      - kafka
    volumes:
      - type: volume
        source: kafka-broker-data
        target: /var/lib/kafka/data
      - type: volume
        source: kafka-broker-secrets
        target: /etc/kafka/secrets
    environment:
      CLUSTER_ID: "qRxWd8yJTnmdg60vfPfeIQ"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-broker:29092,EXTERNAL://localhost:9092"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-controller:9093"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENERS: "INTERNAL://kafka-broker:29092,EXTERNAL://0.0.0.0:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL"
      KAFKA_NODE_ID: 2
      KAFKA_NUM_PARTITIONS: 16
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker
  kafka-akhq:
    image: tchiotludo/akhq:${AKHQ_TAG}
    restart: on-failure
    depends_on:
      - kafka-controller
      - kafka-broker
    ports:
      - target: 8801
        published: 8801
        host_ip: 127.0.0.1
    networks:
      - kafka
    volumes:
      - type: bind
        source: ./docker/akhq/application.yml
        target: /app/application.yml
  kafka-exporter:
    image: danielqsj/kafka-exporter:${KAFKA_EXPORTER_TAG}
    restart: on-failure
    depends_on:
      - kafka-controller
      - kafka-broker
    ports:
      - target: 9308
        published: 9308
        host_ip: 127.0.0.1
    networks:
      - kafka
    command:
      - "--kafka.server=kafka-controller:9093"
      - "--kafka.server=kafka-broker:29092"
  kafka-kminion:
    image: redpandadata/kminion:${KMINION_TAG}
    restart: on-failure
    depends_on:
      - kafka-controller
      - kafka-broker
    ports:
      - target: 8802
        published: 8802
        host_ip: 127.0.0.1
    networks:
      - kafka
    environment:
      KAFKA_BROKERS: "kafka-controller:9093,kafka-broker:29092"
      MINION_CONSUMERGROUPS_SCRAPEMODE: adminApi
      MINION_CONSUMERGROUPS_GRANULARITY: partition
      MINION_TOPICS_GRANULARITY: partition
      EXPORTER_PORT: 8802
  rabbitmq:
    image: rabbitmq:${RABBITMQ_TAG}-management
    restart: on-failure
    ports:
      - target: 5671
        published: 5671
        host_ip: 127.0.0.1
      - target: 5672
        published: 5672
        host_ip: 127.0.0.1
      - target: 5551
        published: 5551
        host_ip: 127.0.0.1
      - target: 5552
        published: 5552
        host_ip: 127.0.0.1
      - target: 15671
        published: 15671
        host_ip: 127.0.0.1
      - target: 15672
        published: 15672
        host_ip: 127.0.0.1
      - target: 15691
        published: 15691
        host_ip: 127.0.0.1
      - target: 15692
        published: 15692
        host_ip: 127.0.0.1
    networks:
      - rabbitmq
    volumes:
      - type: volume
        source: rabbitmq
        target: /var/lib/rabbitmq
      - type: bind
        source: ./docker/rabbitmq/rabbitmq.conf
        target: /etc/rabbitmq/rabbitmq.conf
      - type: bind
        source: ./docker/rabbitmq/enabled_plugins
        target: /etc/rabbitmq/enabled_plugins
    environment:
      RABBITMQ_NODENAME: "rabbit@rabbitmq"
  prometheus:
    image: prom/prometheus:${PROMETHEUS_TAG}
    restart: on-failure
    ports:
      - target: 9090
        published: 9090
        host_ip: 127.0.0.1
    networks:
      - kafka
      - rabbitmq
      - prometheus
    volumes:
      - type: volume
        source: prometheus
        target: /prometheus
      - type: bind
        source: ./docker/prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana:${GRAFANA_TAG}
    restart: on-failure
    depends_on:
      - prometheus
    ports:
      - target: 3000
        published: 3000
        host_ip: 127.0.0.1
    networks:
      - prometheus
    volumes:
      - type: volume
        source: grafana
        target: /var/lib/grafana
      - type: bind
        source: ./docker/grafana/dashboards.yml
        target: /etc/grafana/provisioning/dashboards/dashboards.yaml
      - type: bind
        source: ./docker/grafana/datasources.yml
        target: /etc/grafana/provisioning/datasources/datasources.yaml
      - type: bind
        source: ./docker/grafana/dashboards
        target: /etc/dashboards
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_NAME: Main Org.
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_AUTH_DISABLE_SIGNOUT_MENU: true
      GF_INSTALL_PLUGINS: flant-statusmap-panel
networks:
  kafka:
  rabbitmq:
  prometheus:
volumes:
  kafka-controller-data:
  kafka-controller-secrets:
  kafka-broker-data:
  kafka-broker-secrets:
  rabbitmq:
  prometheus:
  grafana:
